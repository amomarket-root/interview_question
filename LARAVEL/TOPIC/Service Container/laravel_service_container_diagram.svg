<svg viewBox="0 0 1000 1200" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="containerGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#667eea;stop-opacity:0.9" />
      <stop offset="100%" style="stop-color:#764ba2;stop-opacity:0.9" />
    </linearGradient>
    <linearGradient id="bindingGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#3498db;stop-opacity:0.8" />
      <stop offset="100%" style="stop-color:#2980b9;stop-opacity:0.8" />
    </linearGradient>
    <linearGradient id="resolutionGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#27ae60;stop-opacity:0.8" />
      <stop offset="100%" style="stop-color:#229954;stop-opacity:0.8" />
    </linearGradient>
    <linearGradient id="injectionGradient" x1="0%" y1="0%" x2="100%" y2="0%">
      <stop offset="0%" style="stop-color:#e74c3c;stop-opacity:0.8" />
      <stop offset="100%" style="stop-color:#c0392b;stop-opacity:0.8" />
    </linearGradient>
    <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="3" dy="3" stdDeviation="2" flood-color="#00000030"/>
    </filter>
  </defs>

  <!-- Background -->
  <rect width="1000" height="1200" fill="#f8f9fa"/>

  <!-- Title -->
  <rect x="50" y="20" width="900" height="60" rx="15" fill="url(#containerGradient)" filter="url(#shadow)"/>
  <text x="500" y="55" text-anchor="middle" fill="white" font-size="28" font-weight="bold" font-family="Arial, sans-serif">
    Laravel Service Container - IoC Container Workflow
  </text>

  <!-- Central Service Container -->
  <rect x="350" y="120" width="300" height="200" rx="15" fill="url(#containerGradient)" filter="url(#shadow)"/>
  <text x="500" y="150" text-anchor="middle" fill="white" font-size="20" font-weight="bold" font-family="Arial, sans-serif">
    SERVICE CONTAINER
  </text>
  <text x="500" y="175" text-anchor="middle" fill="white" font-size="16" font-family="Arial, sans-serif">
    (IoC Container)
  </text>
  <text x="500" y="200" text-anchor="middle" fill="#ecf0f1" font-size="14" font-family="Arial, sans-serif">
    Central Registry
  </text>
  <text x="500" y="220" text-anchor="middle" fill="#ecf0f1" font-size="14" font-family="Arial, sans-serif">
    Dependency Manager
  </text>
  <text x="500" y="240" text-anchor="middle" fill="#ecf0f1" font-size="14" font-family="Arial, sans-serif">
    Auto-Resolution Engine
  </text>
  <text x="500" y="270" text-anchor="middle" fill="white" font-size="18" font-family="Arial, sans-serif">
    üèóÔ∏è app() | resolve()
  </text>
  <text x="500" y="295" text-anchor="middle" fill="#ecf0f1" font-size="12" font-family="monospace">
    $container = app()
  </text>

  <!-- Phase 1: Binding (Left Side) -->
  <rect x="50" y="120" width="280" height="200" rx="10" fill="url(#bindingGradient)" filter="url(#shadow)"/>
  <text x="190" y="150" text-anchor="middle" fill="white" font-size="18" font-weight="bold" font-family="Arial, sans-serif">
    1. BINDING PHASE
  </text>
  <text x="190" y="175" text-anchor="middle" fill="#ecf0f1" font-size="14" font-family="Arial, sans-serif">
    Register Services
  </text>
  
  <text x="70" y="200" fill="white" font-size="12" font-weight="bold" font-family="Arial, sans-serif">
    ‚Ä¢ Basic Binding
  </text>
  <text x="70" y="215" fill="#ecf0f1" font-size="10" font-family="monospace">
    app()->bind('key', Class::class)
  </text>
  
  <text x="70" y="235" fill="white" font-size="12" font-weight="bold" font-family="Arial, sans-serif">
    ‚Ä¢ Singleton Binding
  </text>
  <text x="70" y="250" fill="#ecf0f1" font-size="10" font-family="monospace">
    app()->singleton('key', Class::class)
  </text>
  
  <text x="70" y="270" fill="white" font-size="12" font-weight="bold" font-family="Arial, sans-serif">
    ‚Ä¢ Interface Binding
  </text>
  <text x="70" y="285" fill="#ecf0f1" font-size="10" font-family="monospace">
    app()->bind(Interface::class, Impl::class)
  </text>
  
  <text x="70" y="305" fill="white" font-size="12" font-weight="bold" font-family="Arial, sans-serif">
    ‚Ä¢ Closure Binding
  </text>

  <!-- Phase 2: Resolution (Right Side) -->
  <rect x="670" y="120" width="280" height="200" rx="10" fill="url(#resolutionGradient)" filter="url(#shadow)"/>
  <text x="810" y="150" text-anchor="middle" fill="white" font-size="18" font-weight="bold" font-family="Arial, sans-serif">
    2. RESOLUTION PHASE
  </text>
  <text x="810" y="175" text-anchor="middle" fill="#ecf0f1" font-size="14" font-family="Arial, sans-serif">
    Retrieve Services
  </text>
  
  <text x="690" y="200" fill="white" font-size="12" font-weight="bold" font-family="Arial, sans-serif">
    ‚Ä¢ Direct Resolution
  </text>
  <text x="690" y="215" fill="#ecf0f1" font-size="10" font-family="monospace">
    app('key') | resolve('key')
  </text>
  
  <text x="690" y="235" fill="white" font-size="12" font-weight="bold" font-family="Arial, sans-serif">
    ‚Ä¢ Class Resolution
  </text>
  <text x="690" y="250" fill="#ecf0f1" font-size="10" font-family="monospace">
    app(Service::class)
  </text>
  
  <text x="690" y="270" fill="white" font-size="12" font-weight="bold" font-family="Arial, sans-serif">
    ‚Ä¢ Auto Resolution
  </text>
  <text x="690" y="285" fill="#ecf0f1" font-size="10" font-family="monospace">
    Constructor Injection
  </text>
  
  <text x="690" y="305" fill="white" font-size="12" font-weight="bold" font-family="Arial, sans-serif">
    ‚Ä¢ Method Injection
  </text>

  <!-- Arrows -->
  <polygon points="330,220 350,220 340,240 340,200" fill="#3498db"/>
  <polygon points="650,220 670,220 660,200 660,240" fill="#27ae60"/>

  <!-- Dependency Injection Flow -->
  <rect x="50" y="350" width="900" height="80" rx="10" fill="url(#injectionGradient)" filter="url(#shadow)"/>
  <text x="500" y="375" text-anchor="middle" fill="white" font-size="20" font-weight="bold" font-family="Arial, sans-serif">
    3. DEPENDENCY INJECTION
  </text>
  <text x="500" y="395" text-anchor="middle" fill="#ecf0f1" font-size="14" font-family="Arial, sans-serif">
    Container automatically injects dependencies into constructors, methods, and properties
  </text>
  <text x="500" y="415" text-anchor="middle" fill="#ecf0f1" font-size="12" font-family="monospace">
    public function __construct(ServiceInterface $service) { ... }
  </text>

  <!-- Binding Types Section -->
  <text x="50" y="470" fill="#2c3e50" font-size="20" font-weight="bold" font-family="Arial, sans-serif">
    Binding Types & Examples
  </text>

  <!-- Binding Examples Grid -->
  <g transform="translate(0, 490)">
    <!-- Basic Binding -->
    <rect x="50" y="0" width="220" height="120" rx="8" fill="#3498db" fill-opacity="0.1" stroke="#3498db" stroke-width="2"/>
    <text x="160" y="25" text-anchor="middle" fill="#2980b9" font-size="16" font-weight="bold" font-family="Arial, sans-serif">
      Basic Binding
    </text>
    <text x="60" y="45" fill="#2c3e50" font-size="11" font-family="monospace">
      app()->bind('mailer', function($app) {
    </text>
    <text x="60" y="60" fill="#2c3e50" font-size="11" font-family="monospace">
        return new MailService(
    </text>
    <text x="60" y="75" fill="#2c3e50" font-size="11" font-family="monospace">
          $app['config']['mail']
    </text>
    <text x="60" y="90" fill="#2c3e50" font-size="11" font-family="monospace">
        );
    </text>
    <text x="60" y="105" fill="#2c3e50" font-size="11" font-family="monospace">
      });
    </text>

    <!-- Singleton Binding -->
    <rect x="290" y="0" width="220" height="120" rx="8" fill="#27ae60" fill-opacity="0.1" stroke="#27ae60" stroke-width="2"/>
    <text x="400" y="25" text-anchor="middle" fill="#229954" font-size="16" font-weight="bold" font-family="Arial, sans-serif">
      Singleton Binding
    </text>
    <text x="300" y="45" fill="#2c3e50" font-size="11" font-family="monospace">
      app()->singleton('cache', 
    </text>
    <text x="300" y="60" fill="#2c3e50" font-size="11" font-family="monospace">
        CacheService::class
    </text>
    <text x="300" y="75" fill="#2c3e50" font-size="11" font-family="monospace">
      );
    </text>
    <text x="300" y="95" fill="#e67e22" font-size="10" font-family="Arial, sans-serif">
      ‚Ü≥ Same instance every time
    </text>

    <!-- Interface Binding -->
    <rect x="530" y="0" width="220" height="120" rx="8" fill="#e74c3c" fill-opacity="0.1" stroke="#e74c3c" stroke-width="2"/>
    <text x="640" y="25" text-anchor="middle" fill="#c0392b" font-size="16" font-weight="bold" font-family="Arial, sans-serif">
      Interface Binding
    </text>
    <text x="540" y="45" fill="#2c3e50" font-size="11" font-family="monospace">
      app()->bind(
    </text>
    <text x="540" y="60" fill="#2c3e50" font-size="11" font-family="monospace">
        PaymentInterface::class,
    </text>
    <text x="540" y="75" fill="#2c3e50" font-size="11" font-family="monospace">
        StripePayment::class
    </text>
    <text x="540" y="90" fill="#2c3e50" font-size="11" font-family="monospace">
      );
    </text>

    <!-- Instance Binding -->
    <rect x="770" y="0" width="180" height="120" rx="8" fill="#9b59b6" fill-opacity="0.1" stroke="#9b59b6" stroke-width="2"/>
    <text x="860" y="25" text-anchor="middle" fill="#8e44ad" font-size="16" font-weight="bold" font-family="Arial, sans-serif">
      Instance Binding
    </text>
    <text x="780" y="45" fill="#2c3e50" font-size="11" font-family="monospace">
      $api = new ApiService();
    </text>
    <text x="780" y="60" fill="#2c3e50" font-size="11" font-family="monospace">
      app()->instance(
    </text>
    <text x="780" y="75" fill="#2c3e50" font-size="11" font-family="monospace">
        'api', $api
    </text>
    <text x="780" y="90" fill="#2c3e50" font-size="11" font-family="monospace">
      );
    </text>
  </g>

  <!-- Resolution Methods Section -->
  <text x="50" y="650" fill="#2c3e50" font-size="20" font-weight="bold" font-family="Arial, sans-serif">
    Resolution Methods & Usage
  </text>

  <g transform="translate(0, 670)">
    <!-- Method 1 -->
    <rect x="50" y="0" width="280" height="100" rx="8" fill="#34495e" fill-opacity="0.1" stroke="#34495e" stroke-width="2"/>
    <text x="190" y="25" text-anchor="middle" fill="#2c3e50" font-size="16" font-weight="bold" font-family="Arial, sans-serif">
      Helper Functions
    </text>
    <text x="60" y="45" fill="#2c3e50" font-size="12" font-family="monospace">
      $service = app('service.name');
    </text>
    <text x="60" y="60" fill="#2c3e50" font-size="12" font-family="monospace">
      $service = resolve('service.name');
    </text>
    <text x="60" y="75" fill="#2c3e50" font-size="12" font-family="monospace">
      $service = app(Service::class);
    </text>

    <!-- Method 2 -->
    <rect x="360" y="0" width="280" height="100" rx="8" fill="#16a085" fill-opacity="0.1" stroke="#16a085" stroke-width="2"/>
    <text x="500" y="25" text-anchor="middle" fill="#2c3e50" font-size="16" font-weight="bold" font-family="Arial, sans-serif">
      Constructor Injection
    </text>
    <text x="370" y="45" fill="#2c3e50" font-size="12" font-family="monospace">
      class UserController {
    </text>
    <text x="370" y="60" fill="#2c3e50" font-size="12" font-family="monospace">
        public function __construct(
    </text>
    <text x="370" y="75" fill="#2c3e50" font-size="12" font-family="monospace">
          UserService $userService) {}
    </text>
    <text x="370" y="90" fill="#2c3e50" font-size="12" font-family="monospace">
      }
    </text>

    <!-- Method 3 -->
    <rect x="670" y="0" width="280" height="100" rx="8" fill="#e67e22" fill-opacity="0.1" stroke="#e67e22" stroke-width="2"/>
    <text x="810" y="25" text-anchor="middle" fill="#2c3e50" font-size="16" font-weight="bold" font-family="Arial, sans-serif">
      Method Injection
    </text>
    <text x="680" y="45" fill="#2c3e50" font-size="12" font-family="monospace">
      public function store(Request $request,
    </text>
    <text x="680" y="60" fill="#2c3e50" font-size="12" font-family="monospace">
                      UserService $service)
    </text>
    <text x="680" y="75" fill="#2c3e50" font-size="12" font-family="monospace">
      {
    </text>
    <text x="680" y="90" fill="#2c3e50" font-size="12" font-family="monospace">
          // Automatically injected
    </text>
  </g>

  <!-- Automatic Resolution Section -->
  <rect x="50" y="790" width="900" height="140" rx="10" fill="#f39c12" fill-opacity="0.1" stroke="#f39c12" stroke-width="2"/>
  <text x="500" y="820" text-anchor="middle" fill="#d68910" font-size="20" font-weight="bold" font-family="Arial, sans-serif">
    ü§ñ Automatic Resolution Process
  </text>
  
  <g transform="translate(70, 840)">
    <circle cx="30" cy="15" r="15" fill="#e74c3c"/>
    <text x="30" y="20" text-anchor="middle" fill="white" font-size="12" font-weight="bold">1</text>
    <text x="55" y="20" fill="#2c3e50" font-size="14" font-family="Arial, sans-serif">
      Container inspects class constructor
    </text>

    <circle cx="30" cy="45" r="15" fill="#f39c12"/>
    <text x="30" y="50" text-anchor="middle" fill="white" font-size="12" font-weight="bold">2</text>
    <text x="55" y="50" fill="#2c3e50" font-size="14" font-family="Arial, sans-serif">
      Identifies required dependencies (type hints)
    </text>

    <circle cx="30" cy="75" r="15" fill="#27ae60"/>
    <text x="30" y="80" text-anchor="middle" fill="white" font-size="12" font-weight="bold">3</text>
    <text x="55" y="80" fill="#2c3e50" font-size="14" font-family="Arial, sans-serif">
      Recursively resolves each dependency
    </text>

    <circle cx="460" cy="15" r="15" fill="#3498db"/>
    <text x="460" y="20" text-anchor="middle" fill="white" font-size="12" font-weight="bold">4</text>
    <text x="485" y="20" fill="#2c3e50" font-size="14" font-family="Arial, sans-serif">
      Creates instances with resolved dependencies
    </text>

    <circle cx="460" cy="45" r="15" fill="#9b59b6"/>
    <text x="460" y="50" text-anchor="middle" fill="white" font-size="12" font-weight="bold">5</text>
    <text x="485" y="50" fill="#2c3e50" font-size="14" font-family="Arial, sans-serif">
      Injects dependencies into constructor
    </text>

    <circle cx="460" cy="75" r="15" fill="#1abc9c"/>
    <text x="460" y="80" text-anchor="middle" fill="white" font-size="12" font-weight="bold">6</text>
    <text x="485" y="80" fill="#2c3e50" font-size="14" font-family="Arial, sans-serif">
      Returns fully constructed object
    </text>
  </g>

  <!-- Key Features -->
  <text x="50" y="970" fill="#2c3e50" font-size="20" font-weight="bold" font-family="Arial, sans-serif">
    üîë Key Features & Benefits
  </text>

  <g transform="translate(0, 990)">
    <!-- Feature boxes -->
    <rect x="50" y="0" width="200" height="80" rx="8" fill="#3498db" fill-opacity="0.1" stroke="#3498db" stroke-width="1"/>
    <text x="150" y="20" text-anchor="middle" fill="#2980b9" font-size="14" font-weight="bold" font-family="Arial, sans-serif">
      Automatic DI
    </text>
    <text x="150" y="35" text-anchor="middle" fill="#2c3e50" font-size="11" font-family="Arial, sans-serif">
      No manual instantiation
    </text>
    <text x="150" y="50" text-anchor="middle" fill="#2c3e50" font-size="11" font-family="Arial, sans-serif">
      Type-hint dependencies
    </text>
    <text x="150" y="65" text-anchor="middle" fill="#2c3e50" font-size="11" font-family="Arial, sans-serif">
      Auto-resolved
    </text>

    <rect x="270" y="0" width="200" height="80" rx="8" fill="#27ae60" fill-opacity="0.1" stroke="#27ae60" stroke-width="1"/>
    <text x="370" y="20" text-anchor="middle" fill="#229954" font-size="14" font-weight="bold" font-family="Arial, sans-serif">
      Flexible Binding
    </text>
    <text x="370" y="35" text-anchor="middle" fill="#2c3e50" font-size="11" font-family="Arial, sans-serif">
      Multiple binding types
    </text>
    <text x="370" y="50" text-anchor="middle" fill="#2c3e50" font-size="11" font-family="Arial, sans-serif">
      Closures & classes
    </text>
    <text x="370" y="65" text-anchor="middle" fill="#2c3e50" font-size="11" font-family="Arial, sans-serif">
      Interface contracts
    </text>

    <rect x="490" y="0" width="200" height="80" rx="8" fill="#e74c3c" fill-opacity="0.1" stroke="#e74c3c" stroke-width="1"/>
    <text x="590" y="20" text-anchor="middle" fill="#c0392b" font-size="14" font-weight="bold" font-family="Arial, sans-serif">
      Lifecycle Control
    </text>
    <text x="590" y="35" text-anchor="middle" fill="#2c3e50" font-size="11" font-family="Arial, sans-serif">
      Singleton pattern
    </text>
    <text x="590" y="50" text-anchor="middle" fill="#2c3e50" font-size="11" font-family="Arial, sans-serif">
      Transient instances
    </text>
    <text x="590" y="65" text-anchor="middle" fill="#2c3e50" font-size="11" font-family="Arial, sans-serif">
      Memory efficient
    </text>

    <rect x="710" y="0" width="200" height="80" rx="8" fill="#9b59b6" fill-opacity="0.1" stroke="#9b59b6" stroke-width="1"/>
    <text x="810" y="20" text-anchor="middle" fill="#8e44ad" font-size="14" font-weight="bold" font-family="Arial, sans-serif">
      Testability
    </text>
    <text x="810" y="35" text-anchor="middle" fill="#2c3e50" font-size="11" font-family="Arial, sans-serif">
      Easy mocking
    </text>
    <text x="810" y="50" text-anchor="middle" fill="#2c3e50" font-size="11" font-family="Arial, sans-serif">
      Swap implementations
    </text>
    <text x="810" y="65" text-anchor="middle" fill="#2c3e50" font-size="11" font-family="Arial, sans-serif">
      Unit test friendly
    </text>
  </g>

  <!-- Access Methods -->
  <rect x="50" y="1100" width="900" height="80" rx="10" fill="#2c3e50" fill-opacity="0.9" filter="url(#shadow)"/>
  <text x="500" y="1125" text-anchor="middle" fill="white" font-size="18" font-weight="bold" font-family="Arial, sans-serif">
    üéØ Container Access Methods
  </text>
  <text x="500" y="1145" text-anchor="middle" fill="#ecf0f1" font-size="14" font-family="monospace">
    app() | resolve() | App::make() | Container::getInstance()
  </text>
  <text x="500" y="1165" text-anchor="middle" fill="#bdc3c7" font-size="12" font-family="Arial, sans-serif">
    Global helper functions provide easy access to the container anywhere in your application
  </text>
</svg>